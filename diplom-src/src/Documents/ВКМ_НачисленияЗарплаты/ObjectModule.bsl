
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьДвижения(); 
		
	СформироватьСторноЗаписи();
		
//	Движения.ОсновныеНачисления.Записать();
//	Движения.ДополнительныеНачисления.Записать(); 
	
	РассчитатьОклад();
	
	РассчитатьДополнительныеНачисления(); 
	
	РассчитатьОтпуск();

	РассчитатьВзаиморасчеты();
		
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения()
		
	//	Для Каждого Строка Из ОсновныеНачисления Цикл
	//				
	//		Если ТипЗнч(Строка.ВидРасчета) = Тип("ПланВидовРасчетаСсылка.ВКМ_ОсновныеНачисления") Тогда
	//			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
	//			Движение.ПериодРегистрации = НачалоМесяца(Дата);
	//			Движение.ПериодДействияНачало = Строка.ДатаНачала;
	//			Движение.ПериодДействияКонец = Строка.ДатаОкончания;
	//			Движение.ВидРасчета = Строка.ВидРасчета;
	//			Движение.Сотрудник = Строка.Сотрудник;
	//			Движение.КатегорияСотрудника = Строка.КатегорияСотрудника;
	//			Движение.График = Строка.ГрафикРаботы;
	//					
	//		Если Строка.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Отпуск Тогда
	//			
	//			ПериодРегистрации = НачалоМесяца(Дата);
	//			НачалоБазовогоПериода = ДобавитьМесяц(ПериодРегистрации, -3);
	//			КонецБазовогоПериода = ПериодРегистрации - 1;
	//
	//			Движение.БазовыйПериодНачало = НачалоБазовогоПериода;
	//			Движение.БазовыйПериодКонец = КонецБазовогоПериода;
	//			
	//		КонецЕсли;
	//					
	//		КонецЕсли;
	//		
	//	КонецЦикла;
	//
	//Для Каждого Строка Из ДополнительныеНачисления Цикл
	//
	//	Если ТипЗнч(Строка.ВидРасчета) = Тип("ПланВидовРасчетаСсылка.ДополнительныеНачисления") Тогда
	//		Движение = Движения.ДополнительныеНачисления.Добавить();
	//		Движение.ПериодРегистрации = НачалоМесяца(Дата);
	//		Движение.ВидРасчета = Строка.ВидРасчета;
	//		Движение.Сотрудник = Строка.Сотрудник;
	//		Движение.Подразделение = Строка.Подразделение;
	//	КонецЕсли;
	//	
	//КонецЦикла;
				
КонецПроцедуры

Процедура СформироватьСторноЗаписи()
	
//	СторноЗаписи = Движения.ВКМ_ОсновныеНачисления.ПолучитьДополнение();
//	
//	Для Каждого Запись Из СторноЗаписи Цикл
//		
//		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
//		ЗаполнитьЗначенияСвойств(Движение, Запись);
//		Движение.ПериодРегистрации = Дата;
//		Движение.ПериодДействияНачало = Запись.ПериодДействияНачалоСторно;
//		Движение.ПериодДействияКонец = Запись.ПериодДействияКонецСторно;
//		Движение.Результат = 0;
//		Движение.Сотрудник = Запись.Сотрудник;
//		Движение.КатегорияСотрудника = Запись.КатегорияСотрудника;
//		Движение.ВидРасчета = Запись.ВидРасчета;
//		Движение.График = Запись.График;
//		Движение.Сторно = Истина;
//		
//	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьОклад()
	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//	"ВЫБРАТЬ
//	|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
//	|	ОсновныеНачисленияДанныеГрафика.РабочихДнейПериодДействия КАК План,
//	|	ОсновныеНачисленияДанныеГрафика.РабочихДнейФактическийПериодДействия КАК Факт,
//	|	ЕСТЬNULL(СведенияОСотрудникахСрезПоследних.Оклад, 0) КАК Оклад,
//	|	СведенияОСотрудникахСрезПоследних.Сотрудник КАК Сотрудник
//	|ИЗ
//	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
//	|			Регистратор = &Ссылка
//	|				И ВидРасчета = &ВидРасчета) КАК ОсновныеНачисленияДанныеГрафика
//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
//	|				&Период,
//	|				(КатегорияСотрудника, Сотрудник) В
//	|					(ВЫБРАТЬ
//	|						ОсновныеНачисления.КатегорияСотрудника КАК КатегорияСотрудника,
//	|						ОсновныеНачисления.Сотрудник КАК Сотрудник
//	|					ИЗ
//	|						РегистрРасчета.ВКМ_ОсновныеНачисления КАК ОсновныеНачисления
//	|					ГДЕ
//	|						ОсновныеНачисления.Регистратор = &Ссылка
//	|						И ОсновныеНачисления.ВидРасчета = &ВидРасчета)) КАК СведенияОСотрудникахСрезПоследних
//	|		ПО ОсновныеНачисленияДанныеГрафика.Сотрудник = СведенияОСотрудникахСрезПоследних.Сотрудник
//	|			И ОсновныеНачисленияДанныеГрафика.КатегорияСотрудника = СведенияОСотрудникахСрезПоследних.КатегорияСотрудника";
//	
//	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
//	Запрос.УстановитьПараметр("Ссылка", Ссылка);
//	Запрос.УстановитьПараметр("Период", НачалоМесяца(Дата));
//	
//	Выборка = Запрос.Выполнить().Выбрать();
//	
//	Пока Выборка.Следующий() Цикл
//		
//		Движение = Движения.ОсновныеНачисления[Выборка.НомерСтроки - 1];
//		
//		Если Выборка.План = 0 Тогда
//			Движение.Результат = 0;
//		Иначе
//			Движение.Результат = (Выборка.Оклад * Выборка.Факт / Выборка.План);
//		КонецЕсли;
//		
//		Если Движение.Сторно Тогда
//			Движение.Результат = - Движение.Результат;
//		КонецЕсли;
//		
//	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьДополнительныеНачисления()
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
	//	|	ЕСТЬNULL(ОплатаПроездаСрезПоследних.СуммаОплатыПроезда, 0) КАК СуммаОплатыПроезда,
	//	|	ЕСТЬNULL(КурсОсновнойВалюты.Курс, 0) КАК КурсОсновнойВалюты,
	//	|	ОсновнаяВалютаСрезПоследних.ВалютаУчета КАК ОсновнаяВалютаУчета
	//	|ИЗ
	//	|	РегистрРасчета.ДополнительныеНачисления КАК ДополнительныеНачисления
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОплатаПроезда.СрезПоследних(&Период, ) КАК ОплатаПроездаСрезПоследних
	//	|		ПО (ИСТИНА),
	//	|	РегистрСведений.ОсновнаяВалюта.СрезПоследних КАК ОсновнаяВалютаСрезПоследних
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних КАК КурсОсновнойВалюты
	//	|		ПО ОсновнаяВалютаСрезПоследних.ВалютаУчета = КурсОсновнойВалюты.Валюта
	//	|ГДЕ
	//	|	ДополнительныеНачисления.Регистратор = &Ссылка
	//	|	И ДополнительныеНачисления.ВидРасчета = &ВидРасчета";
	//
	//Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ДополнительныеНачисления.ОплатаПроезда);
	//Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//Запрос.УстановитьПараметр("Период", НачалоМесяца(Дата));
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//Пока Выборка.Следующий() Цикл
	//	
	//	Движение = Движения.ДополнительныеНачисления[Выборка.НомерСтроки - 1];
	//	
	//	Движение.Результат = Выборка.СуммаОплатыПроезда / Выборка.КурсОсновнойВалюты;
	//	Движение.Курс = Выборка.КурсОсновнойВалюты;
	//	Движение.Валюта = Выборка.ОсновнаяВалютаУчета;
	//	
	//КонецЦикла;
	//
	//Движения.ДополнительныеНачисления.Записать(, Истина);
	
КонецПроцедуры 

Процедура РассчитатьОтпуск()
		
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	//	|	ЕСТЬNULL(ОсновныеНачисленияБазаОсновныеНачисления.РезультатБаза, 0) + ЕСТЬNULL(ОсновныеНачисленияБазаДополнительныеНачисления.Результат, 0) КАК БазаНачислений,
	//	|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.РабочихДнейБазовыйПериод, 0) КАК БазаДней,
	//	|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.КалендарныхДнейФактическийПериодДействия, 0) КАК ДнейОтпуска,
	//	|	ОсновнаяВалютаСрезПоследних.ВалютаУчета КАК ОсновнаяВалютаУчета,
	//	|	ЕСТЬNULL(КурсОсновнойВалюты.Курс, 0) КАК КурсОсновнойВалюты
	//	|ИЗ
	//	|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
	//	|			Регистратор = &Регистратор
	//	|				И ВидРасчета = &ВидРасчета) КАК ОсновныеНачисленияДанныеГрафика
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисления.БазаОсновныеНачисления(
	//	|				&Измерения,
	//	|				&Измерения,
	//	|				,
	//	|				Регистратор = &Регистратор
	//	|					И ВидРасчета = &ВидРасчета) КАК ОсновныеНачисленияБазаОсновныеНачисления
	//	|		ПО ОсновныеНачисленияДанныеГрафика.НомерСтроки = ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисления.БазаДополнительныеНачисления(
	//	|				&Измерения,
	//	|				&Измерения,
	//	|				,
	//	|				Регистратор = &Регистратор
	//	|					И ВидРасчета = &ВидРасчета) КАК ОсновныеНачисленияБазаДополнительныеНачисления
	//	|		ПО ОсновныеНачисленияДанныеГрафика.НомерСтроки = ОсновныеНачисленияБазаДополнительныеНачисления.НомерСтроки
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсТекущейВалюты
	//	|		ПО ОсновныеНачисленияДанныеГрафика.Валюта = КурсТекущейВалюты.Валюта,
	//	|	РегистрСведений.ОсновнаяВалюта.СрезПоследних(&Период, ) КАК ОсновнаяВалютаСрезПоследних
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсОсновнойВалюты
	//	|		ПО ОсновнаяВалютаСрезПоследних.ВалютаУчета = КурсОсновнойВалюты.Валюта";
	//
	//Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ОсновныеНачисления.Отпуск);
	//
	//Измерения = Новый Массив;
	//Измерения.Добавить("Сотрудник");
	//Измерения.Добавить("Подразделение");
	//
	//Запрос.УстановитьПараметр("Период", НачалоМесяца(Дата));
	//Запрос.УстановитьПараметр("Измерения", Измерения);
	//Запрос.УстановитьПараметр("Регистратор", Ссылка);
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//Пока Выборка.Следующий() Цикл
	//	
	//	Движение = Движения.ОсновныеНачисления[Выборка.НомерСтроки - 1];
	//	
	//	Движение.Результат = (Выборка.ДнейОтпуска * Выборка.БазаНачислений / Выборка.БазаДней) / Выборка.КурсОсновнойВалюты;
	//	Движение.Курс = Выборка.КурсОсновнойВалюты;
	//	Движение.Валюта = Выборка.ОсновнаяВалютаУчета;
	//	
	//	Если Движение.Сторно Тогда
	//		Движение.Результат = - Движение.Результат;
	//	КонецЕсли;

	//КонецЦикла;
	//
	//Движения.ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьВзаиморасчеты()
	
	//Движения.Взаиморасчеты.Записывать = Истина;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
	//	|	ОсновныеНачисления.Подразделение КАК Подразделение,
	//	|	ОсновныеНачисления.Результат КАК Результат,
	//	|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета
	//	|ПОМЕСТИТЬ Вт_Начисления
	//	|ИЗ
	//	|	РегистрРасчета.ОсновныеНачисления КАК ОсновныеНачисления
	//	|ГДЕ
	//	|	ОсновныеНачисления.Регистратор = &Регистратор
	//	|
	//	|ОБЪЕДИНИТЬ ВСЕ
	//	|
	//	|ВЫБРАТЬ
	//	|	ДополнительныеНачисления.Сотрудник,
	//	|	ДополнительныеНачисления.Подразделение,
	//	|	ДополнительныеНачисления.Результат,
	//	|	ДополнительныеНачисления.ВидРасчета
	//	|ИЗ
	//	|	РегистрРасчета.ДополнительныеНачисления КАК ДополнительныеНачисления
	//	|ГДЕ
	//	|	ДополнительныеНачисления.Регистратор = &Регистратор
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	&ПериодРегистрации КАК период,
	//	|	Вт_Начисления.Сотрудник КАК Сотрудник,
	//	|	Вт_Начисления.Подразделение КАК Подразделение,
	//	|	СУММА(Вт_Начисления.Результат) КАК Сумма,
	//	|	Вт_Начисления.ВидРасчета КАК ВидРасчета
	//	|ИЗ
	//	|	Вт_Начисления КАК Вт_Начисления
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	Вт_Начисления.Подразделение,
	//	|	Вт_Начисления.Сотрудник,
	//	|	Вт_Начисления.ВидРасчета";
	//	
	//Запрос.УстановитьПараметр("Регистратор", Ссылка);
	//Запрос.УстановитьПараметр("ПериодРегистрации", НачалоМесяца(Дата));

	//Результат = Запрос.Выполнить();
	//
	//Выборка = Результат.Выбрать();

	//Пока Выборка.Следующий() Цикл 
	//	 Движение = Движения.Взаиморасчеты.ДобавитьПриход();
	//	 Движение.Период = НачалоМесяца(Дата);
	//	 Движение.ВидРасчета = Выборка.ВидРасчета; 
	//	 Движение.Сотрудник = Выборка.Сотрудник;
	//	 Движение.Подразделение = Выборка.Подразделение;
	//	 Движение.Сумма = Выборка.Сумма;
	//КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли