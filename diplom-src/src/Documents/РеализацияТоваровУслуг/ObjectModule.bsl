
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	//++ ДОБАВЛЕНО Басейко О.С. ВКМ_РаботаСЗаявкамиКлиентов 12.05.2024
	ИначеЕсли ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);	
	КонецЕсли;
	//-- ДОБАВЛЕНО
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	//++ ДОБАВЛЕНО Басейко О.С. ВКМ_РаботаСЗаявкамиКлиентов 12.05.2024
	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВидДоговора");
	Если ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание  Тогда
	//-- ДОБАВЛЕНО
		
		Движения.ОбработкаЗаказов.Записывать = Истина;
		Движения.ОстаткиТоваров.Записывать = Истина;
		
		Движение = Движения.ОбработкаЗаказов.Добавить();
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Договор = Договор;
		Движение.Заказ = Основание;
		Движение.СуммаОтгрузки = СуммаДокумента;
		
		Для Каждого ТекСтрокаТовары Из Товары Цикл
			Движение = Движения.ОстаткиТоваров.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Контрагент = Контрагент;
			Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
			Движение.Сумма = ТекСтрокаТовары.Сумма;
			Движение.Количество = ТекСтрокаТовары.Количество;
		КонецЦикла;
		
	//++ ДОБАВЛЕНО Басейко О.С. ВКМ_РаботаСЗаявкамиКлиентов 12.05.2024
	Иначе
		Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
		
		Для Каждого ТекСтрокаУслуги Из Услуги Цикл
			Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.ДобавитьПриход();
			Движение.Период = Дата;
			Движение.Клиент = Контрагент;
			Движение.Договор = Договор;
			Движение.КоличествоЧасов = ТекСтрокаУслуги.Количество;
			Движение.СуммаКОплате = ТекСтрокаУслуги.Количество * ТекСтрокаУслуги.Цена;
		КонецЦикла;
	КонецЕсли;
	//-- ДОБАВЛЕНО
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

//++ ДОБАВЛЕНО Басейко О.С. ВКМ_РаботаСЗаявкамиКлиентов 12.05.2024

Процедура ВКМ_ВыполнитьАвтозаполнение() Экспорт
	
	Попытка
		НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
		НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
		
		Если НоменклатураАбонентскаяПлата.Пустая() ИЛИ НоменклатураРаботыСпециалиста.Пустая() Тогда
			ВызватьИсключение "Заполните номенклатуру абонентской платы и работы специалиста.";
		Иначе
			Услуги.Очистить();
			СуммаАбонентскойПлаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СуммаАбонентскойПлаты");
			
			Если СуммаАбонентскойПлаты <> 0 Тогда
				НовСтрока = Услуги.Добавить();
				НовСтрока.Номенклатура = НоменклатураАбонентскаяПлата;
				НовСтрока.Количество = 1;
				НовСтрока.Цена = СуммаАбонентскойПлаты;
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВКМ_ВыполненныеКлиентуРаботыОстатки.Договор КАК Договор,
			|	СУММА(ВКМ_ВыполненныеКлиентуРаботыОстатки.КоличествоЧасовОстаток) КАК КоличествоЧасовОстаток,
			|	СУММА(ВКМ_ВыполненныеКлиентуРаботыОстатки.СуммаКОплатеОстаток) КАК СуммаКОплатеОстаток
			|ИЗ
			|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Остатки(
			|			&Период,
			|			Клиент = &Клиент
			|				И Договор = &Договор) КАК ВКМ_ВыполненныеКлиентуРаботыОстатки
			|
			|СГРУППИРОВАТЬ ПО
			|	ВКМ_ВыполненныеКлиентуРаботыОстатки.Договор";
			
			Запрос.УстановитьПараметр("Период", КонецМесяца(ТекущаяДатаСеанса()));
			Запрос.УстановитьПараметр("Клиент", Контрагент);
			Запрос.УстановитьПараметр("Договор", Договор);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				Количество = Макс(Выборка.КоличествоЧасовОстаток, -Выборка.КоличествоЧасовОстаток);
				Сумма = Макс(Выборка.СуммаКОплатеОстаток, -Выборка.СуммаКОплатеОстаток);
				
				НовСтрока = Услуги.Добавить();
				НовСтрока.Номенклатура = НоменклатураРаботыСпециалиста;
				НовСтрока.Количество = Количество;
				НовСтрока.Цена = Сумма / Количество;
			КонецЦикла;			
		КонецЕсли;
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		
		Если Не ЗначениеЗаполнено(ОписаниеОшибки) Тогда
			ОписаниеОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		КонецЕсли;
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки;
		Сообщение.Сообщить();
	КонецПопытки;
   
КонецПроцедуры

//-- ДОБАВЛЕНО

#КонецОбласти

#КонецЕсли
