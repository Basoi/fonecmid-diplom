#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий
	
Процедура ОбработкаПроведения(Отказ, Режим)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиента.Контрагент КАК Контрагент,
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту КАК ЧасыКОплатеКлиенту,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|			ПО ВКМ_ОбслуживаниеКлиента.Договор = ДоговорыКонтрагентов.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, Сотрудник = &Сотрудник) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|			ПО ВКМ_ОбслуживаниеКлиента.Специалист = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
	|		ПО ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка = ВКМ_ОбслуживаниеКлиента.Ссылка
	|ГДЕ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
	|	И ВКМ_ОбслуживаниеКлиента.Проведен
	|	И ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание)
	|	И ВКМ_ОбслуживаниеКлиента.Дата МЕЖДУ ДоговорыКонтрагентов.ВКМ_ПериодНачалаДействияДоговора И ДоговорыКонтрагентов.ВКМ_ПериодОкончанияДействияДоговора";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СтоимостьЧасаРабот = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СтоимостьЧасаРабот");
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.ДобавитьРасход();
		Движение.Период = Дата;
		Движение.Клиент = Контрагент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = Выборка.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = Выборка.ЧасыКОплатеКлиенту * СтоимостьЧасаРабот;
		
		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Сотрудник = Специалист;
		Движение.ЧасовКОплате = Выборка.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = Выборка.ЧасыКОплатеКлиенту * СтоимостьЧасаРабот * Выборка.ПроцентОтРабот / 100;
	КонецЦикла;
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
	Если Проведен Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(ВКМ_ОбслуживаниеКлиента.Ссылка) КАК Документ,
		|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
		|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРабот КАК ВремяНачалаРабот,
		|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРабот КАК ВремяОкончанияРабот,
		|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	(ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
		|			ИЛИ ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот <> &ДатаПроведенияРабот
		|			ИЛИ ВКМ_ОбслуживаниеКлиента.ВремяНачалаРабот <> &ВремяНачалаРабот
		|			ИЛИ ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРабот <> &ВремяОкончанияРабот
		|			ИЛИ ВКМ_ОбслуживаниеКлиента.Специалист <> &Специалист)
		|	И ВКМ_ОбслуживаниеКлиента.Проведен";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("ДатаПроведенияРабот", ДатаПроведенияРабот);
		Запрос.УстановитьПараметр("ВремяНачалаРабот", ВремяНачалаРабот);
		Запрос.УстановитьПараметр("ВремяОкончанияРабот", ВремяОкончанияРабот);
		Запрос.УстановитьПараметр("Специалист", Специалист);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Уведомление = Неопределено;
		
		Если Ссылка.Пустая() Тогда
			Уведомление = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
			Уведомление.ТекстСообщения = СтрШаблон("Зарегистрировано обращение: %1. Назначен специалист: %2. Дата проведения работ: %3"
			, Ссылка
			, Специалист
			, ДатаПроведенияРабот)
		Иначе
			Пока Выборка.Следующий() Цикл
				Уведомление = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
				Сообщение = СтрШаблон("По документу %1 внесены следующие изменения:", Выборка.Документ);
				
				Если ДатаПроведенияРабот <> Выборка.ДатаПроведенияРабот Тогда
					Сообщение = Сообщение + Символы.ПС + СтрШаблон("Изменена дата проведения работ на %1", ДатаПроведенияРабот);
				КонецЕсли;
				Если ВремяНачалаРабот <> Выборка.ВремяНачалаРабот Тогда
					Сообщение = Сообщение + Символы.ПС + СтрШаблон("Изменено время начала работ на %1", ВремяНачалаРабот);
				КонецЕсли;
				Если ВремяОкончанияРабот <> Выборка.ВремяОкончанияРабот Тогда
					Сообщение = Сообщение + Символы.ПС + СтрШаблон("Изменено время окончания работ на %1", ВремяОкончанияРабот);
				КонецЕсли;
				Если Специалист <> Выборка.Специалист Тогда
					Сообщение = Сообщение + Символы.ПС + СтрШаблон("Изменен специалист на %1", Специалист);
				КонецЕсли;
				
				Уведомление.ТекстСообщения = Сообщение;
			КонецЦикла;
		КонецЕсли;
		
		Если Уведомление <> Неопределено Тогда
			Уведомление.Записать();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
